services:
  restore:
    image: {{ restic_image }}
    container_name: {{ pangolin_resticker_project_name }}_restore
    restart: "no"  # Don't restart - run once and exit
    environment:
      - TZ={{ restic_timezone }}
      - RESTIC_REPOSITORY={{ restic_repository_b2 }}
      - RESTIC_PASSWORD={{ restic_password }}
      - B2_ACCOUNT_ID={{ b2_account_id }}
      - B2_ACCOUNT_KEY={{ b2_account_key }}
    volumes:
{% for item in pangolin_backup_paths_on_host %}
      - "{{ item.path }}:{{ item.container_path }}:rw"
{% endfor %}
    # Run the restore command directly when container starts
    command: >
      sh -c "
      echo 'Starting restore process...' &&
      echo 'Clearing target directory...' &&
{% for item in pangolin_backup_paths_on_host %}
      rm -rf {{ item.container_path }}/* {{ item.container_path }}/.* 2>/dev/null || true &&
{% endfor %}
      echo 'Executing restore...' &&
{% for item in pangolin_backup_paths_on_host %}
      restic restore {{ restic_snapshot_to_restore }} --target {{ item.container_path }} &&
      echo 'Restored to {{ item.container_path }}' &&
{% endfor %}
      echo 'Verifying restored files...' &&
{% for item in pangolin_backup_paths_on_host %}
      ls -la {{ item.container_path }} &&
{% endfor %}
      echo 'Restore completed successfully!'
      "
